#!/usr/bin/env ruby

require 'pg'
require 'time'
require 'fileutils'

def th_sql(entries)
  id_to_location = {
    "in" => "main_room",
    "1"  => "guest_bedroom",
    "2"  => "nw_main_room",
    "3"  => "sw_main_room",
    "4"  => "office",
    "5"  => "master_bath",
    "6"  => "master_bedroom",
    "7"  => "back_door",
    "8"  => "shop"
  }

  extracted_th = id_to_location.keys.map do |id|
    [
      id_to_location[id],
      {
        "temp"     => entries["temp#{id}f"],
        "humidity" => entries["humidity#{id}"],
        "batt"     => entries["batt#{id}"]
      }
    ]
  end.to_h

  sql = "INSERT INTO ecowitt_th(time, location, temperature, humidity, battery) VALUES"
  sql_values = extracted_th.map do |k,v|
    "(NOW(), \'#{k}\', #{v['temp'] || 'NULL'}, #{v['humidity'] || 'NULL'}, #{v['batt'] || 'NULL'})"
  end.compact.join(",\n")

  sql + "\n" + sql_values
end

def weather_sql(entries)
  sql = "INSERT INTO ecowitt_weather(time, temperature, humidity, battery, wind_direction, wind_speed, wind_gust, solar_radiation, uv, rain_rate, pressure) VALUES"
  sql_data = [
    entries['tempf'],
    entries['humidity'],
    entries['wh65batt'],
    entries['winddir'],
    entries['windspeedmph'],
    entries['windgustmph'],
    entries['solarradiation'],
    entries['uv'],
    entries['rainratein'],
    entries['baromabsin']
  ]
  sql_values = "(NOW(), #{sql_data.join(",")})"
  sql + "\n" + sql_values
end

puts "Content-type: text/plain\n\n"

if ENV['REQUEST_METHOD'] == 'POST'
  post = ARGF.read
  File.open('post', 'w') { |file| file.write(post) }
  File.open('last_post_time', 'w') { |file| file.write(Time.now.iso8601 + "\n") }

  entries =
    post
    .split('&')
    .reduce({}) do |a,e|
      r = e.split('=')
      a[r[0]] = r[1]
      a
    end
  File.open('entries', 'w') { |file| file.write(entries) }

  db = PG.connect(host: ENV['PGHOST'], port: ENV['PGPORT'], user: ENV['PGUSER'], password: ENV['PGPASSWORD'], dbname: ENV['PGDATABASE'])
  File.open('testing_data', 'w') { |file| file.write(th_sql(entries)) }
  db.exec(th_sql(entries))
  db.exec(weather_sql(entries))

  puts "OK"
end

if ENV['REQUEST_METHOD'] == 'GET'

  puts "Current temporary file list is as follows:"
  # FileUtils.rm_rf Dir.glob("*")

  Dir.glob('*').each do |f|
    puts "--FILE: #{f}"
    File.open(f,'r') { |file| puts file.read }
    puts
  end
end

exit 0
